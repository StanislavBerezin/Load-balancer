{"version":3,"file":"static/webpack/static/development/pages/index.js.e58973b4fd83a25bd95f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from \"react\";\n\nimport socketIOClient from \"socket.io-client\";\nimport \"./Main.css\";\nimport axios from \"axios\";\nimport Intro from \"../components/Intro\";\nimport PieChart from \"react-minimal-pie-chart\";\n\nclass Cloud extends Component {\n  // init state with the prefetched messages\n  state = {\n    search: \"\",\n    title: \"\",\n    loading: false,\n    error: false,\n    positive: 10,\n    negative: 10,\n    negativePie: 10,\n    positivePie: 10,\n    sum: 0,\n    negPercent: 50,\n    posPercent: 50,\n    negWords: [],\n    posWords: []\n  };\n\n  // FROM ME\n\n  handleChange = event => {\n    this.setState({ search: event.target.value });\n    console.log(this.state.test);\n  };\n\n  handleStaticSearch = event => {\n    event.preventDefault();\n    console.log(\"static\");\n\n    axios\n      .get(\"/streamTweets\", { search: \"Trump\" })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  getSum(total, num) {\n    return total + num;\n  }\n\n  handleStop = event => {\n    event.preventDefault();\n    console.log(\"shoud stop\");\n\n    axios.post(\"/api/stop\");\n  };\n\n  handleLiveSearch = event => {\n    event.preventDefault();\n    console.log(\"live\");\n    let search = this.state.search;\n    this.setState({\n      title: this.state.search,\n      negativePie: 10,\n      positivePie: 10,\n      positive: 10,\n      negative: 10,\n      negPercent: 50,\n      posPercent: 50,\n      negWords: [],\n      posWords: []\n    });\n\n    axios.post(\"/specificSearch\", { search });\n    console.log(search);\n    const socket = socketIOClient();\n\n    try {\n      socket.on(\"connect\", () => {\n        console.log(\"Socket Connected\");\n        socket.on(\"tweets\", data => {\n          let sum = this.state.positivePie + this.state.negativePie;\n          this.setState({ sum: sum });\n          if (data.score > 0) {\n            let positiveNum = [data.score].concat(this.state.positive);\n            let positiveWords = [data.positiveWords].concat(\n              this.state.posWords\n            );\n            let percent = (this.state.positivePie * 100) / this.state.sum;\n            this.setState({\n              positive: positiveNum,\n              posPercent: percent,\n              posWords: positiveWords\n            });\n            this.setState({\n              positivePie: this.state.positive.reduce(this.getSum)\n            });\n            console.log(this.state.positivePie);\n          } else {\n            let negativeNum = [data.score].concat(this.state.negative);\n            let negativeWords = [data.negativeWords].concat(\n              this.state.negWords\n            );\n            let percent = (this.state.negativePie * 100) / this.state.sum;\n            this.setState({\n              negative: negativeNum,\n              negPercent: percent,\n              negWords: negativeWords\n            });\n            this.setState({\n              negativePie: Math.abs(this.state.negative.reduce(this.getSum))\n            });\n          }\n        });\n      });\n      socket.on(\"disconnect\", () => {\n        socket.off(\"tweets\");\n        socket.removeAllListeners(\"tweets\");\n        console.log(\"Socket Disconnected\");\n      });\n      socket.on(\"error\", function(err) {\n        console.log(\"Socket.IO Error\");\n        console.log(err); // this is changed from your code in last comment\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // FROM ME FINISHED\n\n  render() {\n    let posWords = null;\n    posWords = this.state.posWords.map((e, index) => {\n      return <li key={index}>{e}</li>;\n    });\n    let negWords = null;\n    negWords = this.state.negWords.map((e, index) => {\n      return <li key={index}>{e}</li>;\n    });\n\n    return (\n      <div>\n        {/* intro screen */}\n        <Intro />\n        <div className=\"Main\">\n          <h1>View statistics</h1>\n          <div className=\"Bar\">\n            {/* managing the form on submission */}\n            <form onSubmit={this.handleLiveSearch} className=\"form\">\n              <label>\n                <input type=\"search\" name=\"name\" onChange={this.handleChange} />\n              </label>\n              <div className=\"searchButtons\">\n                <input type=\"submit\" name=\"live\" value=\"Live stream\" />\n                <input\n                  type=\"submit\"\n                  onClick={this.handleStaticSearch}\n                  name=\"static\"\n                  value=\"View posts\"\n                />\n                <input\n                  type=\"submit\"\n                  onClick={this.handleStop}\n                  name=\"static\"\n                  value=\"Stop\"\n                />\n              </div>\n            </form>\n          </div>\n\n          <h1>Statistics for {this.state.title}</h1>\n          <p>\n            Positive {this.state.posPercent.toString().substr(0, 4)} %{\" \"}\n            <span className=\"pos\"> __</span>\n          </p>\n          <p>\n            Negative {this.state.negPercent.toString().substr(0, 4)} %{\" \"}\n            <span className=\"neg\"> __</span>\n          </p>\n\n          <div className=\"statistics\">\n            <div>\n              <PieChart\n                className=\"chart\"\n                data={[\n                  {\n                    title: \"Test\",\n                    value: this.state.positivePie,\n                    color: \"#E38627\"\n                  },\n                  {\n                    title: \"Two\",\n                    value: this.state.negativePie,\n                    color: \"#C13C37\"\n                  }\n                ]}\n              />\n            </div>\n\n            <div className=\"goodWords\">\n              <h4>Positive words</h4>\n              <ul>{posWords}</ul>\n            </div>\n            <div className=\"badWords\">\n              <h4>Negative words</h4>\n              <ul>{negWords}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cloud;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAilFA;AACA;AACA;;;AAiFA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAIA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AARA;AAiBA;AAAA;AAIA;AAAA;AAQA;;;;AA7MA;AACA;AA+MA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}